diff --git a/ggml-metal.m b/ggml-metal.m
index 6cfacf6..ae6fe69 100644
--- a/ggml-metal.m
+++ b/ggml-metal.m
@@ -172,19 +172,30 @@ struct ggml_metal_context * ggml_metal_init(int n_cb) {
     id <MTLDevice> device;
     NSString * s;
 
+    // Pick and show default Metal device
+    device = MTLCreateSystemDefaultDevice();
+    s = [device name];
+
 #if TARGET_OS_OSX
     // Show all the Metal device instances in the system
     NSArray * devices = MTLCopyAllDevices();
-    for (device in devices) {
-        s = [device name];
-        GGML_METAL_LOG_INFO("%s: found device: %s\n", __func__, [s UTF8String]);
+    id <MTLDevice> dev;
+    for (dev in devices) {
+        s = [dev name];
+        if ([dev isRemovable]) {
+            GGML_METAL_LOG_INFO("%s: found external device: %s\n", __func__, [s UTF8String]);
+        } else if ([dev isLowPower]) {
+            GGML_METAL_LOG_INFO("%s: found integrated device: %s\n", __func__, [s UTF8String]);
+        } else {
+            GGML_METAL_LOG_INFO("%s: found discrete device: %s\n", __func__, [s UTF8String]);
+            device = dev;
+        }
     }
-#endif
-
-    // Pick and show default Metal device
-    device = MTLCreateSystemDefaultDevice();
     s = [device name];
+    GGML_METAL_LOG_INFO("%s: picking device: %s\n", __func__, [s UTF8String]);
+# else
     GGML_METAL_LOG_INFO("%s: picking default device: %s\n", __func__, [s UTF8String]);
+#endif
 
     // Configure context
     struct ggml_metal_context * ctx = malloc(sizeof(struct ggml_metal_context));
